[{"C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\components\\jobPage\\JobPage.js":"1","C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\index.js":"2","C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\components\\navBar\\NavBar.js":"3","C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\components\\searchBar\\SearchBar.js":"4","C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\components\\mainPage\\MainPage.js":"5"},{"size":896,"mtime":1608123762029,"results":"6","hashOfConfig":"7"},{"size":917,"mtime":1608062204464,"results":"8","hashOfConfig":"7"},{"size":1260,"mtime":1608123939580,"results":"9","hashOfConfig":"7"},{"size":1718,"mtime":1608125678606,"results":"10","hashOfConfig":"7"},{"size":2039,"mtime":1608126440543,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"dtrg8n",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\components\\jobPage\\JobPage.js",["23"],"C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\index.js",[],"C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\components\\navBar\\NavBar.js",[],"C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\components\\searchBar\\SearchBar.js",["24"],"C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\components\\mainPage\\MainPage.js",["25","26","27"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport getJobs from \"../../state/actions/getJobs\";\r\nimport JobCard from \"../jobCard/JobCard\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport '../../styles.scss';\r\n\r\nconst MainPage = ({ status, jobs, getJobs }) => {\r\n  const [isBottom, setIsBottom] = useState(false);\r\n//   const [pageNumber, setPageNumber] = useState(1)\r\n  const pageNumber = useRef(1)\r\n\r\n  useEffect(() => {\r\n    getJobs({ page: pageNumber.current, description: \"\", location: \"\", type: \"true\" });\r\n    pageNumber.current = pageNumber.current + 1\r\n    setIsBottom(false);\r\n  }, []);\r\n  \r\n  function handleScroll() {\r\n    const scrollTop =\r\n      (document.documentElement && document.documentElement.scrollTop) ||\r\n      document.body.scrollTop;\r\n    const scrollHeight =\r\n      (document.documentElement && document.documentElement.scrollHeight) ||\r\n      document.body.scrollHeight;\r\n    if (scrollTop + window.innerHeight + 50 >= scrollHeight) {\r\n      setIsBottom(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    \r\n    if (isBottom) {\r\n    \r\n      getJobs({ page: pageNumber.current, description: \"\", location: \"\", type: \"true\" });\r\n    \r\n      \r\n    }\r\n    \r\n  }, [isBottom]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\nconsole.log(pageNumber.current)\r\n  return (\r\n    <div>\r\n        <div className=\"main\">\r\n      {jobs.map((job) => (\r\n          \r\n        <Link style={{ textDecoration: 'none' }} to={`/${job.id}`}>\r\n          <JobCard key={job.id} job={job} />\r\n        </Link>\r\n      ))}\r\n      </div>\r\n      {status === \"loading\" && <p>loading jobs...</p>}\r\n      {jobs.length === 0 && status !==\"loading\" && <p>No jobs found</p>}\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  jobs: state.jobs.jobs,\r\n  status: state.jobs.getJobsStatus,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getJobs })(MainPage);\r\n",{"ruleId":"28","severity":1,"message":"29","line":14,"column":36,"nodeType":"30","endLine":14,"endColumn":69},{"ruleId":"31","severity":1,"message":"32","line":4,"column":8,"nodeType":"33","messageId":"34","endLine":4,"endColumn":15},{"ruleId":"31","severity":1,"message":"35","line":5,"column":16,"nodeType":"33","messageId":"34","endLine":5,"endColumn":21},{"ruleId":"36","severity":1,"message":"37","line":17,"column":6,"nodeType":"38","endLine":17,"endColumn":8,"suggestions":"39"},{"ruleId":"36","severity":1,"message":"37","line":40,"column":6,"nodeType":"38","endLine":40,"endColumn":16,"suggestions":"40"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'getJobs' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getJobs'. Either include it or remove the dependency array. If 'getJobs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["41"],["42"],{"desc":"43","fix":"44"},{"desc":"45","fix":"46"},"Update the dependencies array to be: [getJobs]",{"range":"47","text":"48"},"Update the dependencies array to be: [getJobs, isBottom]",{"range":"49","text":"50"},[656,658],"[getJobs]",[1264,1274],"[getJobs, isBottom]"]