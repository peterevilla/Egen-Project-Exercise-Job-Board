[{"C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\components\\jobPage\\JobPage.js":"1","C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\index.js":"2","C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\components\\navBar\\NavBar.js":"3","C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\components\\searchBar\\SearchBar.js":"4","C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\components\\mainPage\\MainPage.js":"5","C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\state\\types\\index.js":"6"},{"size":896,"mtime":1608123762029,"results":"7","hashOfConfig":"8"},{"size":917,"mtime":1608062204464,"results":"9","hashOfConfig":"8"},{"size":1240,"mtime":1608129266839,"results":"10","hashOfConfig":"8"},{"size":1718,"mtime":1608125678606,"results":"11","hashOfConfig":"8"},{"size":2141,"mtime":1608128957951,"results":"12","hashOfConfig":"8"},{"size":132,"mtime":1608042112962,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"dtrg8n",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\components\\jobPage\\JobPage.js",["28"],"C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\index.js",[],["29","30"],"C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\components\\navBar\\NavBar.js",[],"C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\components\\searchBar\\SearchBar.js",["31"],"import React, {useState} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport getJobsSearch from '../../state/actions/fromSearch';\r\nimport getJobs from '../../state/actions/getJobs'\r\nimport '../../styles.scss';\r\n\r\nconst SearchBar = ({getJobsSearch, status}) => {\r\n    const [ params, setParams] = useState({page: 0, description: \"\", location: \"\", type: \"true\"})\r\n\r\n\r\n    const searchHandle = e => {\r\n        setParams({ ...params, [e.target.name]: e.target.value});\r\n        \r\n      };\r\n      const submitHandler = (e) => {\r\n          e.preventDefault()\r\n          getJobsSearch(params)\r\n        \r\n      };\r\n    return (\r\n        <form  onSubmit={submitHandler}> \r\n            <input\r\n            type=\"text\"\r\n            name=\"description\"\r\n            value={params.description}\r\n            placeholder=\"Filter by title, companies, description...\"\r\n            onChange={searchHandle}\r\n            className=\"form\"\r\n          \r\n\r\n            ></input>\r\n            <input\r\n            type=\"text\"\r\n             name=\"location\"\r\n             value={params.location}\r\n             placeholder=\"Location\"\r\n             onChange={searchHandle} \r\n             className=\"form\" \r\n\r\n            ></input>\r\n            {/* <input type=\"radio\"\r\n            checked={params.type.value === \"true\"}\r\n            value={params.type}\r\n            placeholder=\"Full time only\"\r\n            onChange={searchHandle}\r\n            ></input> */}\r\n            <button className=\"search-btn\"  type=\"submit\" >Search</button>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    status: state.jobs.getJobsStatus, \r\n  });\r\n  \r\n  export default connect(mapStateToProps, { getJobsSearch})(SearchBar);\r\n","C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\components\\mainPage\\MainPage.js",["32","33","34"],"C:\\Users\\IT2\\Desktop\\Lambda\\Egen-Project-Exercise-Job-Board\\src\\state\\types\\index.js",[],{"ruleId":"35","severity":1,"message":"36","line":14,"column":36,"nodeType":"37","endLine":14,"endColumn":69},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":15},{"ruleId":"42","severity":1,"message":"46","line":5,"column":16,"nodeType":"44","messageId":"45","endLine":5,"endColumn":21},{"ruleId":"47","severity":1,"message":"48","line":22,"column":6,"nodeType":"49","endLine":22,"endColumn":8,"suggestions":"50"},{"ruleId":"47","severity":1,"message":"48","line":47,"column":6,"nodeType":"49","endLine":47,"endColumn":16,"suggestions":"51"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'getJobs' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getJobs'. Either include it or remove the dependency array. If 'getJobs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["54"],["55"],"no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},{"desc":"58","fix":"59"},"Update the dependencies array to be: [getJobs]",{"range":"60","text":"61"},"Update the dependencies array to be: [getJobs, isBottom]",{"range":"62","text":"63"},[697,699],"[getJobs]",[1354,1364],"[getJobs, isBottom]"]