{"version":3,"sources":["state/actions/getJobs.js","components/jobCard/JobCard.js","components/mainPage/MainPage.js","components/navBar/NavBar.js","state/actions/fromSearch.js","components/searchBar/SearchBar.js","components/jobPage/JobPage.js","App.js","reportWebVitals.js","state/types/index.js","state/reducers/jobsReducer.js","state/reducers/index.js","index.js"],"names":["GET_JOBS_START","GET_JOBS_SUCCESS","GET_JOBS_ERROR","GET_JOBS_SUCCESS_SEARCH","getJobs","params","dispatch","type","setTimeout","axios","get","page","description","location","then","response","payload","data","catch","err","JobCard","job","className","src","company_logo","title","connect","state","jobs","status","getJobsStatus","useState","isBottom","setIsBottom","pageNumber","useRef","handleScroll","scrollTop","document","documentElement","body","scrollHeight","window","innerHeight","useEffect","current","addEventListener","removeEventListener","console","log","map","style","textDecoration","to","id","length","NavBar","themeState","setThemeState","localStorage","getItem","classList","add","onClick","setItem","remove","icon","faMoon","faSun","getJobsSearch","setParams","searchHandle","e","target","name","value","onSubmit","preventDefault","placeholder","onChange","JobPage","props","paramJobId","match","find","company","href","company_url","dangerouslySetInnerHTML","__html","how_to_apply","exact","path","render","routeProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","requestStatus","initialState","jobsReducer","action","newState","reducers","combineReducers","store","createStore","reducer","compose","applyMiddleware","thunk","ReactDOM","StrictMode","getElementById"],"mappings":"sPACaA,EAAiB,iBACjBC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAA0B,0BA4BtBC,EAzBD,SAACC,GAAD,OAAY,SAAAC,GAIxBA,EAAS,CAAEC,KAAMP,IAEjBQ,YAAW,WAEPC,IACCC,IADD,sDAEmDL,EAAOM,KAF1D,wBAE8EN,EAAOO,YAFrF,qBAE6GP,EAAOQ,SAFpH,iBAIGC,MAAK,SAAAC,GAEJT,EAAS,CAAEC,KAAMN,EAAkBe,QAASD,EAASE,UAEtDC,OAAM,SAAAC,GACLb,EAAS,CAAEC,KAAML,EAAgBc,QAASG,SAIhD,OCXSC,EAdC,SAAC,GAAW,IAAVC,EAAS,EAATA,IACd,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,gBAAf,SAA+B,qBAAKC,IAAG,UAAKF,EAAIG,kBAEhD,qBAAKF,UAAU,WAAf,SAA2BD,EAAId,OAC/B,qBAAKe,UAAU,YAAf,SAA4BD,EAAII,QAChC,qBAAKH,UAAU,eAAf,SAA+BD,EAAIR,e,QC2DhCa,eALS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KAAKA,KACjBC,OAAQF,EAAMC,KAAKE,iBAGmB,CAAE1B,WAA3BsB,EA9DE,SAAC,GAA+B,IAA7BG,EAA4B,EAA5BA,OAAQD,EAAoB,EAApBA,KAAMxB,EAAc,EAAdA,QAAc,EACd2B,oBAAS,GADK,mBACvCC,EADuC,KAC7BC,EAD6B,KAGxCC,EAAaC,iBAAO,GAQ1B,SAASC,IACP,IAAMC,EACHC,SAASC,iBAAmBD,SAASC,gBAAgBF,WACtDC,SAASE,KAAKH,UACVI,EACHH,SAASC,iBAAmBD,SAASC,gBAAgBE,cACtDH,SAASE,KAAKC,aACZJ,EAAYK,OAAOC,YAAc,IAAMF,GACzCR,GAAY,GAqBhB,OAnCAW,qBAAU,WACRxC,EAAQ,CAAEO,KAAMuB,EAAWW,QAASjC,YAAa,GAAIC,SAAU,GAAIN,KAAM,SACzE2B,EAAWW,QAAUX,EAAWW,QAAU,EAC1CZ,GAAY,KACX,IAcHW,qBAAU,WAEJZ,GAEF5B,EAAQ,CAAEO,KAAMuB,EAAWW,QAASjC,YAAa,GAAIC,SAAU,GAAIN,KAAM,WAK1E,CAACyB,IAEJY,qBAAU,WAER,OADAF,OAAOI,iBAAiB,SAAUV,GAC3B,kBAAMM,OAAOK,oBAAoB,SAAUX,MACjD,IAELY,QAAQC,IAAIf,EAAWW,SAEnB,gCACI,qBAAKvB,UAAU,OAAf,SACDM,EAAKsB,KAAI,SAAC7B,GAAD,OAER,cAAC,IAAD,CAAM8B,MAAO,CAAEC,eAAgB,QAAUC,GAAE,WAAMhC,EAAIiC,IAArD,SACE,cAAC,EAAD,CAAsBjC,IAAKA,GAAbA,EAAIiC,WAIV,YAAXzB,GAAwB,gDACR,IAAhBD,EAAK2B,QAA0B,YAAV1B,GAAuB,oD,gBCrBpC2B,EA/BA,WAAO,IAAD,EACmBzB,oBAAS,GAD5B,mBACV0B,EADU,KACEC,EADF,KAoBjB,OAPEd,qBAAU,WAER,GAAiB,SADAe,aAAaC,QAAQ,SACb,OAAQtB,SAASE,KAAKqB,UAAUC,IAAI,gBAM7D,sBAAKxC,UAAU,UAAf,UACI,cAAC,IAAD,CAAM6B,MAAO,CAAEC,eAAgB,QAAUC,GAAG,IAA5C,SAAgD,2CAChD,mBAAGU,QApBU,WACjBL,GAAeD,GACXA,GACFE,aAAaK,QAAQ,QAAS,QAC9B1B,SAASE,KAAKqB,UAAUC,IAAI,eAE5BH,aAAaK,QAAQ,QAAS,SAC9B1B,SAASE,KAAKqB,UAAUI,OAAO,eAaH3C,UAAU,YAApC,SACKmC,EAAc,cAAC,IAAD,CAAiBS,KAAMC,MAAe,cAAC,IAAD,CAAiBD,KAAME,Y,uBCE3EC,EAzBK,SAAChE,GAAD,OAAY,SAAAC,GAI9BA,EAAS,CAAEC,KAVe,mBAY1BC,YAAW,WAEPC,IACCC,IADD,sDAEmDL,EAAOM,KAF1D,wBAE8EN,EAAOO,YAFrF,qBAE6GP,EAAOQ,SAFpH,iBAIGC,MAAK,SAAAC,GAEJT,EAAS,CAAEC,KAjBgB,0BAiBeS,QAASD,EAASE,UAE7DC,OAAM,SAAAC,GACLb,EAAS,CAAEC,KArBO,iBAqBeS,QAASG,SAIhD,OC4BWO,eAJO,SAAAC,GAAK,MAAK,CAC9BE,OAAQF,EAAMC,KAAKE,iBAGmB,CAAEuC,iBAA3B3C,EAlDC,SAAC,GAA6B,IAA5B2C,EAA2B,EAA3BA,cAA2B,KAAZxC,OACFE,mBAAS,CAACpB,KAAM,EAAGC,YAAa,GAAIC,SAAU,GAAIN,KAAM,UAD1C,mBACnCF,EADmC,KAC3BiE,EAD2B,KAIrCC,EAAe,SAAAC,GACjBF,EAAU,2BAAKjE,GAAN,kBAAemE,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAQrD,OACI,uBAAOC,SANa,SAACJ,GACnBA,EAAEK,iBACFR,EAAchE,IAIhB,UACI,uBACAE,KAAK,OACLmE,KAAK,cACLC,MAAOtE,EAAOO,YACdkE,YAAY,6CACZC,SAAUR,EACVjD,UAAU,SAIV,uBACAf,KAAK,OACJmE,KAAK,WACLC,MAAOtE,EAAOQ,SACdiE,YAAY,WACZC,SAAUR,EACVjD,UAAU,SASX,wBAAQA,UAAU,aAAcf,KAAK,SAArC,0BCpBGyE,EAtBC,SAACC,GACb,IAAMC,EAAaD,EAAME,MAAM9E,OAAOiD,GAEhCjC,EAAM4D,EAAMrD,KAAKwD,MAAK,SAAC/D,GAC3B,OAAOA,EAAIiC,KAAO4B,KAEpB,OACI,sBAAK5D,UAAU,WAAf,UACI,sBAAKA,UAAU,iBAAf,UACA,qBAAKA,UAAU,QAAf,SAAuB,qBAAKC,IAAG,UAAKF,EAAIG,kBACxC,qBAAKF,UAAU,eAAf,SAA+BD,EAAIgE,UACnC,mBAAGlC,MAAO,CAAEC,eAAgB,QAAUkC,KAAI,UAAKjE,EAAIkE,aAAejE,UAAU,eAA5E,6BAGA,sBAAKA,UAAU,wBAAf,UACA,qBAAKkE,wBAAyB,CAACC,OAAO,GAAD,OAAKpE,EAAIT,gBAC9C,qBAAK4E,wBAAyB,CAACC,OAAO,GAAD,OAAKpE,EAAIqE,wBCmB1D,IAIehE,eAJS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KAAKA,QAGqB,GAAzBF,EA9Bf,YAAsB,IAARE,EAAO,EAAPA,KAKZ,OACE,sBAAKN,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqE,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAEAA,KAAK,OACLC,OAAQ,SAACC,GACP,OAAO,cAAC,EAAD,CAASX,MAAOW,EAAWX,MAAOvD,KAAMA,gBClB1CmE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnF,MAAK,YAAkD,IAA/CoF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCPDO,EAEA,UAFAA,EAGA,UAHAA,EAIF,QCILC,EAAe,CACnB5E,KAAM,GACNE,cDTS,SC8BI2E,EAlBK,WAAmC,IAAlC9E,EAAiC,uDAAzB6E,EAAcE,EAAW,uCACpD,OAAQA,EAAOnG,MACb,KAAKP,EACH,OAAO,2BAAK2B,GAAZ,IAAmBG,cAAeyE,IACpC,KAAKtG,EACH,IAAM0G,EAAQ,sBAAOhF,EAAMC,MAAb,YAAsB8E,EAAO1F,UAC3C,MAAO,CAACY,KAAM+E,EAAU7E,cAAeyE,GACzC,KAAKpG,EAEH,MAAO,CAACyB,KAAM8E,EAAO1F,QAASc,cAAeyE,GAC/C,KAAKrG,EACH,OAAO,2BAAKyB,GAAZ,IAAmBG,cAAeyE,IAEpC,QACE,OAAO5E,ICnBEiF,EAJEC,YAAgB,CAC/BjF,KAAM6E,I,QCQFK,EAAQC,YAAYC,EAASC,YAAQC,YAAgBC,OAE3DC,IAASvB,OAEP,cAAC,IAAMwB,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACA,cAAC,IAAD,UACA,cAAC,EAAD,UAIFxE,SAASgF,eAAe,SAM1BvB,M","file":"static/js/main.ce52af2f.chunk.js","sourcesContent":["import axios from 'axios'\r\nexport const GET_JOBS_START = 'GET_JOBS_START';\r\nexport const GET_JOBS_SUCCESS = 'GET_JOBS_SUCCESS';\r\nexport const GET_JOBS_ERROR = 'GET_JOBS_ERROR';\r\nexport const GET_JOBS_SUCCESS_SEARCH = 'GET_JOBS_SUCCESS_SEARCH';\r\n\r\n\r\nconst getJobs = (params) => dispatch => {\r\n\r\n  \r\n  \r\n    dispatch({ type: GET_JOBS_START });\r\n  \r\n    setTimeout(() => {\r\n\r\n        axios\r\n        .get(\r\n            `https://jobs.github.com/positions.json?page=${params.page}&description=${params.description}&location=${params.location}&search=code`\r\n        )\r\n          .then(response => {\r\n           \r\n            dispatch({ type: GET_JOBS_SUCCESS, payload: response.data });\r\n          })\r\n          .catch(err => {\r\n            dispatch({ type: GET_JOBS_ERROR, payload: err });\r\n          });\r\n\r\n        \r\n    },1000)\r\n  \r\n  };\r\n\r\n  export default getJobs;","import React from 'react'\r\nimport '../../styles.scss';\r\n\r\nconst JobCard = ({job}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"img-container\"><img src={`${job.company_logo}`}></img></div>\r\n            \r\n            <div className=\"job-type\">{job.type}</div>\r\n            <div className=\"job-title\">{job.title}</div>\r\n            <div className=\"job-location\">{job.location}</div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobCard;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport getJobs from \"../../state/actions/getJobs\";\r\nimport JobCard from \"../jobCard/JobCard\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport '../../styles.scss';\r\n\r\nconst MainPage = ({ status, jobs, getJobs }) => {\r\n  const [isBottom, setIsBottom] = useState(false);\r\n//   const [pageNumber, setPageNumber] = useState(1)\r\n  const pageNumber = useRef(1)\r\n\r\n  useEffect(() => {\r\n    getJobs({ page: pageNumber.current, description: \"\", location: \"\", type: \"true\" });\r\n    pageNumber.current = pageNumber.current + 1\r\n    setIsBottom(false);\r\n  }, []);\r\n  \r\n  function handleScroll() {\r\n    const scrollTop =\r\n      (document.documentElement && document.documentElement.scrollTop) ||\r\n      document.body.scrollTop;\r\n    const scrollHeight =\r\n      (document.documentElement && document.documentElement.scrollHeight) ||\r\n      document.body.scrollHeight;\r\n    if (scrollTop + window.innerHeight + 50 >= scrollHeight) {\r\n      setIsBottom(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    \r\n    if (isBottom) {\r\n    \r\n      getJobs({ page: pageNumber.current, description: \"\", location: \"\", type: \"true\" });\r\n    \r\n      \r\n    }\r\n    \r\n  }, [isBottom]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\nconsole.log(pageNumber.current)\r\n  return (\r\n    <div>\r\n        <div className=\"main\">\r\n      {jobs.map((job) => (\r\n          \r\n        <Link style={{ textDecoration: 'none' }} to={`/${job.id}`}>\r\n          <JobCard key={job.id} job={job} />\r\n        </Link>\r\n      ))}\r\n      </div>\r\n      {status === \"loading\" && <p>loading jobs...</p>}\r\n      {jobs.length === 0 && status !==\"loading\" && <p>No jobs found</p>}\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  jobs: state.jobs.jobs,\r\n  status: state.jobs.getJobsStatus,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getJobs })(MainPage);\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport '../../styles.scss';\r\nimport { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst NavBar = () => {\r\n    const [themeState, setThemeState] = useState(false);\r\n\r\n    const handleChange = () => {\r\n        setThemeState(!themeState);\r\n        if (themeState) {\r\n          localStorage.setItem('Theme', 'dark');\r\n          document.body.classList.add('dark-mode');\r\n        } else {\r\n          localStorage.setItem('Theme', 'light');\r\n          document.body.classList.remove('dark-mode');\r\n        }\r\n      }\r\n      useEffect(() => {\r\n        const getTheme = localStorage.getItem('Theme');\r\n        if (getTheme === 'dark') return  document.body.classList.add('dark-mode');\r\n      })\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"nav-bar\">\r\n            <Link style={{ textDecoration: 'none' }} to=\"/\"><h1 >devJobs</h1></Link>\r\n            <p onClick={handleChange} className=\"dark-mode\">\r\n                {themeState ? (<FontAwesomeIcon icon={faMoon} />) : (<FontAwesomeIcon icon={faSun} />)}\r\n                \r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar;\r\n","import axios from 'axios'\r\nexport const GET_JOBS_START = 'GET_JOBS_START';\r\nexport const GET_JOBS_SUCCESS = 'GET_JOBS_SUCCESS';\r\nexport const GET_JOBS_ERROR = 'GET_JOBS_ERROR';\r\nexport const GET_JOBS_SUCCESS_SEARCH = 'GET_JOBS_SUCCESS_SEARCH';\r\n\r\n\r\nconst getJobsSearch = (params) => dispatch => {\r\n\r\n  \r\n  \r\n    dispatch({ type: GET_JOBS_START });\r\n  \r\n    setTimeout(() => {\r\n\r\n        axios\r\n        .get(\r\n            `https://jobs.github.com/positions.json?page=${params.page}&description=${params.description}&location=${params.location}&search=code`\r\n        )\r\n          .then(response => {\r\n           \r\n            dispatch({ type: GET_JOBS_SUCCESS_SEARCH, payload: response.data });\r\n          })\r\n          .catch(err => {\r\n            dispatch({ type: GET_JOBS_ERROR, payload: err });\r\n          });\r\n\r\n        \r\n    },1000)\r\n  \r\n  };\r\n\r\n  export default getJobsSearch;","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport getJobsSearch from '../../state/actions/fromSearch';\r\nimport getJobs from '../../state/actions/getJobs'\r\nimport '../../styles.scss';\r\n\r\nconst SearchBar = ({getJobsSearch, status}) => {\r\n    const [ params, setParams] = useState({page: 0, description: \"\", location: \"\", type: \"true\"})\r\n\r\n\r\n    const searchHandle = e => {\r\n        setParams({ ...params, [e.target.name]: e.target.value});\r\n        \r\n      };\r\n      const submitHandler = (e) => {\r\n          e.preventDefault()\r\n          getJobsSearch(params)\r\n        \r\n      };\r\n    return (\r\n        <form  onSubmit={submitHandler}> \r\n            <input\r\n            type=\"text\"\r\n            name=\"description\"\r\n            value={params.description}\r\n            placeholder=\"Filter by title, companies, description...\"\r\n            onChange={searchHandle}\r\n            className=\"form\"\r\n          \r\n\r\n            ></input>\r\n            <input\r\n            type=\"text\"\r\n             name=\"location\"\r\n             value={params.location}\r\n             placeholder=\"Location\"\r\n             onChange={searchHandle} \r\n             className=\"form\" \r\n\r\n            ></input>\r\n            {/* <input type=\"radio\"\r\n            checked={params.type.value === \"true\"}\r\n            value={params.type}\r\n            placeholder=\"Full time only\"\r\n            onChange={searchHandle}\r\n            ></input> */}\r\n            <button className=\"search-btn\"  type=\"submit\" >Search</button>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    status: state.jobs.getJobsStatus, \r\n  });\r\n  \r\n  export default connect(mapStateToProps, { getJobsSearch})(SearchBar);\r\n","import React from 'react'\r\nimport '../../styles.scss';\r\n\r\n\r\nconst JobPage = (props) => {\r\n    const paramJobId = props.match.params.id;\r\n\r\n    const job = props.jobs.find((job) => {\r\n      return job.id === paramJobId;\r\n    });\r\n    return (\r\n        <div className=\"job-page\">\r\n            <div className=\"head-container\">\r\n            <div className=\"image\"><img src={`${job.company_logo}`}></img></div>\r\n            <div className=\"company-name\">{job.company}</div>\r\n            <a style={{ textDecoration: 'none' }} href={`${job.company_url}`} className=\"company-site\">Company site</a>\r\n            </div>\r\n\r\n            <div className=\"description-container\">\r\n            <div dangerouslySetInnerHTML={{__html: `${job.description}`}} />\r\n            <div dangerouslySetInnerHTML={{__html: `${job.how_to_apply}`}} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobPage;\r\n","import React, {} from 'react'\r\nimport MainPage from './components/mainPage/MainPage';\r\nimport NavBar from './components/navBar/NavBar'\r\nimport {\r\n\r\n  Switch,\r\n  Route,\r\n\r\n} from \"react-router-dom\";\r\nimport SearchBar from './components/searchBar/SearchBar';\r\nimport { connect } from \"react-redux\";\r\nimport JobPage from './components/jobPage/JobPage';\r\nimport './styles.scss';\r\nfunction App({jobs}) {\r\n\r\n  // useEffect(() => {\r\n  //   document.body.classList.add('dark-mode');\r\n  // },[])\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar />\r\n      <SearchBar/>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <MainPage />\r\n        </Route>\r\n        <Route\r\n    \r\n        path=\"/:id\"\r\n        render={(routeProps) => {\r\n          return <JobPage match={routeProps.match} jobs={jobs} />;\r\n        }}\r\n      />\r\n      </Switch>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  jobs: state.jobs.jobs,\r\n});\r\n\r\nexport default connect(mapStateToProps, {  })(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const requestStatus = {\r\n    ready: 'ready',\r\n    loading: 'loading',\r\n    success: 'success',\r\n    error: 'error',\r\n  };\r\n  ","import { requestStatus } from '../types/index';\r\nimport {\r\n  GET_JOBS_START,\r\n  GET_JOBS_SUCCESS,\r\n  GET_JOBS_ERROR,\r\n  GET_JOBS_SUCCESS_SEARCH,\r\n} from '../actions/getJobs';\r\n\r\nconst initialState = {\r\n  jobs: [],\r\n  getJobsStatus: requestStatus.ready,\r\n};\r\n\r\nconst jobsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_JOBS_START:\r\n      return { ...state, getJobsStatus: requestStatus.loading };\r\n    case GET_JOBS_SUCCESS:\r\n      const newState = [...state.jobs,... action.payload]\r\n      return {jobs: newState, getJobsStatus: requestStatus.success };\r\n    case GET_JOBS_SUCCESS_SEARCH:\r\n      \r\n      return {jobs: action.payload, getJobsStatus: requestStatus.success };\r\n    case GET_JOBS_ERROR:\r\n      return { ...state, getJobsStatus: requestStatus.error };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default jobsReducer;","import { combineReducers } from 'redux';\r\nimport jobsReducer from './jobsReducer';\r\n\r\n\r\nconst reducers = combineReducers({\r\n  jobs: jobsReducer,\r\n});\r\n\r\nexport default reducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport reducer from './state/reducers';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(reducer, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  \r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <Router>\r\n    <App />\r\n    </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}